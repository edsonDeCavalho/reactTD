/**
 * Exercice 1 TD React
 * Edson De Carvalho
 */

import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import React,{useState,useEffect} from "react";
import 'bootstrap/dist/css/bootstrap.min.css';
import Card from "../components/Card"
import Grid from "../components/Grid";





export default function Home() {
    /**
     * Declaration des variable
     */
    const [count,setCount]=useState(0)
    const [todoList,setTodoList] = useState([])
    const [inter,setInter] = useState(" ")
    const [disable,setDisable]= useState(true);
    const [editableTodo,setEditableTodo]=useState(null);
    /**
     * Fuction pour desable un input text
     * @param item
     * @param index
     */
    const  editTask =(item,index) => {
        setEditableTodo(index)
    }
        const hanleChange = (e) => {
            let newTodoList = [...todoList]
            newTodoList[editableTodo] = e.target.value
            setTodoList(prevArray => [...prevArray,e.target.value])
            setTodoList(newTodoList)
    }
    /*Utilisation de useEffect*/
    useEffect(()=> {
        console.log("modification")
    },[todoList]);

    useEffect(()=> {
        localStorage.setItem("todos",todoList)
        let historique = localStorage.getItem("todos")
    },[todoList]);
    return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
          <div classNme={styles.header}>
          <h1 className={styles.title}>
             Hello Edson
          </h1>
          </div>
          <h3>count : {count}</h3>
          <button  onClick={ () => setCount(count+1)}>Button</button>
          <input type="text" onChange={event => setInter(event.target.value)} />
          <button  onClick={ () => setTodoList([...todoList, inter])}>Button</button>

          {/*Boucle d'affichage de elemnts*/}
          { todoList.length > 0 &&(
              todoList.map((todo,i) =>{
                  return (
                      <div key={i}>
                          <p>{todo}</p>
                          <input type='text' onChange={e => hanleChange(e)} value={todo} disabled={editableTodo === i ? false :true}/>
                          <button onClick={()=>editTask(todo,i)}>Edit</button>
                          <button onClick={()=> setTodoList(prevArray=>prevArray.filter(item=>prevArray.indexOf(item)!==i))}>Supprimer</button>
                      </div>)
              })
          )}
          <Card title={"Edson"} description={"Edson trÃ©s cool"} image="icon.png" />
          <Grid />
      </main>
      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
